@{
    ViewBag.Title = "Index";
}
    
@using CultureEngine
@section styles
{
    @Styles.Render("~/Content/Home.css")
}
<div class="form-wrapper left">
    <label for="spec">@LocalizationResx.СhooseSpeciality</label>
        <select class="form-control" id="spec">
            <option value="noData">@LocalizationResx.PickSpeciality</option>
            <option value="pi">Програмная инженерия</option>
            <option value="ki">Компьютерная инженерия</option>
            <option value="ci">Системная инженерия</option>
        </select>
    <label for="quality">@LocalizationResx.ChooseUniversity</label>
    <select class="form-control" id="quality">
        <option value="noData">@LocalizationResx.PickQuality</option>
        <option value="1">@LocalizationResx.QualityGood</option>
        <option value="0.8">@LocalizationResx.QualityMiddle</option>
        <option value="0.6">@LocalizationResx.QualityLow</option>
    </select>
    <a href="#" id="commit" class="btn btn-default">@LocalizationResx.Calculate</a>
</div>
<div id="chart-container">
    <div class="chartWrapper right">
        <div id="payments-container">
            <canvas id="payments"></canvas>
        </div>
    </div>


    <div class="chartWrapper right">
        <div id="summary-container">
            <canvas id="summary"></canvas>
        </div>
    </div>
</div>





@section Scripts
{
    @Scripts.Render("~/Scripts/chartsScript.js")
    @Scripts.Render("~/Scripts/Highcharts-4.0.1/js/highcharts.js")
    @Scripts.Render("~/Scripts/Highcharts-4.0.1/js/modules/exporting.js")
    @Scripts.Render("~/Scripts/bootstrap.min.js")  
    @Scripts.Render("~/Scripts/chart.js/chart.js") 
    <script>

        function clone(destination, source) {
            for (var property in source) {
                if (typeof source[property] === "object" && source[property] !== null && destination[property]) {
                    clone(destination[property], source[property]);
                } else {
                    destination[property] = source[property];
                }
            }
        };

        $(function()
        {
            var charts = [];
            var textStrings = {
                paymentsCaption: "@LocalizationResx.PaymentsCaption",
                summaryCaption: "@LocalizationResx.SummaryCaption",
                paymentsAxis: '@LocalizationResx.PaymentsGraphCaption',
                summaryAxis: '@LocalizationResx.SummaryGraphCaption',
                xAxisCaption: '@LocalizationResx.xChartAxisCaption',
                yAxisCaption: '@LocalizationResx.yChartAxisCaption',
                Profit:'@LocalizationResx.Profit',
                Year: '@LocalizationResx.Year',
                Costs: '@LocalizationResx.Costs'
            };

            var xAxisLabels = [0,1,2,3,4,5];

            var specialities = {};

            specialities["pi"] = {
                name: textStrings.paymentsAxis,
                data: [[1300, 0], [1400, 0], [1500, 800], [1500, 3000], [1500, 5000], [1500, 7000]],
            };

            specialities["ci"] = {
                name: textStrings.paymentsAxis,
                data: [[1000, 0], [1000, 0], [1100, 1200], [1000, 2000], [1000, 3000]],
            };


            specialities["ki"] = {
                name: textStrings.paymentsAxis,
                data: [[1200, 0], [1200, 1200], [1200, 1700], [1400, 2000], [1400, 2500]],
            };

            $("#commit").on("click", function () {
                var selectedSpec = {};
                if ($("#spec").val() != "noData" || $("#quality").val() != "noData") {
                    var names = ["ki", "pi", "ci"];
                    selectedSpec = JSON.parse(JSON.stringify(specialities[$("#spec").val()]));
                    for (var i = selectedSpec.data.length; i--;) {
                        selectedSpec.data[i][1] *= $("#quality").val();
                    }
                    console.log(selectedSpec.data);
                }
                else
                    selectedSpec.data = [[0]];

                charts[0].destroy();
                charts[1].destroy();
                charts[0] = drawChart($("#payments"), selectedSpec.data, xAxisLabels);
                charts[1] = drawChart($("#summary"), selectedSpec.data, xAxisLabels);
            });

            charts[0] = drawChart($("#payments"), [[0]], [""]);
            charts[1] = drawChart($("#summary"), [[0]], [""]);
        })
    </script>
}