@{
    ViewBag.Title = "Index";
}
    
@using CultureEngine
@section styles
{
    @Styles.Render("~/Content/Home.css")
}

<div id="input" class="panel left">
    <div id="greeting">
        <h3>@LocalizationResx.GreetingHeader</h3>
        <p>@LocalizationResx.Greeting</p>
        <p>@LocalizationResx.GreetingFooter</p>
    </div>
    <label for="spec">@LocalizationResx.СhooseSpeciality</label>
        <select class="form-control" id="spec">
            <option value="noData">@LocalizationResx.PickSpeciality</option>
            <option value="pi">Програмная инженерия</option>
            <option value="ki">Компьютерная инженерия</option>
            <option value="ci">Системная инженерия</option>
        </select>
    <a href="#" id="commit" class="btn btn-default">@LocalizationResx.Calculate</a>
</div>
<div id="chart-container" class="panel" style="display: none">
    <input type="button" id="js-changeInput" class="btn btn-default" value="@LocalizationResx.SelectAnotherInput"/>
    <div class="chartWrapper right">
        <div id="payments-container"></div>
    </div>
    <div class="chartWrapper right">
        <div id="summary-container"></div>
    </div>
</div>




@section Scripts
{
    @Scripts.Render("~/Scripts/chartsScript.js")
    @Scripts.Render("~/Scripts/Highcharts-4.0.1/js/highcharts.js")
    @Scripts.Render("~/Scripts/Highcharts-4.0.1/js/modules/exporting.js")
    @Scripts.Render("~/Scripts/bootstrap.min.js")
    <script>
        $(function () {           

            var textStrings = {
                paymentsCaption: "@LocalizationResx.PaymentsCaption",
                summaryCaption: "@LocalizationResx.SummaryCaption",
                paymentsAxis: '@LocalizationResx.PaymentsGraphCaption',
                summaryAxis: '@LocalizationResx.SummaryGraphCaption',
                xAxisCaption: '@LocalizationResx.xChartAxisCaption',
                yAxisCaption: '@LocalizationResx.yChartAxisCaption',
                Profit: '@LocalizationResx.Profit',
                Year: '@LocalizationResx.Year',
                OneYear: '@LocalizationResx.OneYear',
                FewYears: '@LocalizationResx.FewYears',
                ManyYears: '@LocalizationResx.ManyYears',
                UAH: '@LocalizationResx.UAH',
                Costs: '@LocalizationResx.Costs',
                dotCaption: '@LocalizationResx.DotCaption',
                summarySalary: '@LocalizationResx.SummarySalary',
                summaryCosts: '@LocalizationResx.SummaryCosts',
                brinkCaprion:'@LocalizationResx.BrinkCaption'
            };

            var noData = [{
                name: textStrings.paymentsAxis,
                data: [],
                color: "red"
            },
                {
                    name: textStrings.summaryAxis,
                    data: [],
                    color: "green"
                }];

            var valueTypes = {
                costs: textStrings.Costs,
                year: textStrings.Year,
                oneYear: textStrings.OneYear,
                fewYears: textStrings.FewYears,
                manyYears: textStrings.ManyYears,
                UAH: textStrings.UAH,
                profit: textStrings.Profit
            };

            var specialities = {
                "ki": {},
                "pi": {},
                "ci": {}
            };

            $("#js-changeInput").click(function () {
                $("#input").fadeToggle(500);
                $("#chart-container").fadeToggle(500);
            });

            $("#commit").on("click", function () {                
                var selectedSpec;
                var data1, data2, data3;
                if ($("#spec").val() != "noData"/* && $("#quality").val() != "noData"*/) {
                    var names = ["ki", "pi", "ci"];
                    selectedSpec = JSON.parse(JSON.stringify(specialities[$("#spec").val()]));

                    data1 = {
                        name: selectedSpec[0].name,
                        color: 'darkblue',
                        data: selectedSpec[0].data
                    };
                    data2 = {
                        name: data1.name,
                        color: 'blue',
                        data: []
                    };
                    data3 = {
                        name: data1.name,
                        color: 'royalblue',
                        data: []
                    };

                    for (var i = 0; i < data1.data.length; i++) {
                        var y2 = data1.data[i] * 0.8;
                        var y3 = data1.data[i] * 0.6;
                        data2.data.push(y2);
                        data3.data.push(y3);
                    }
                    console.log(selectedSpec.data);
                }
                else return;

                $("#input").fadeToggle(500);
                $("#chart-container").fadeToggle(500);
                Chart.draw("#payments-container", [data1, data2, data3, selectedSpec[1]], textStrings.paymentsCaption, textStrings.xAxisCaption, textStrings.yAxisCaption, textStrings.dotCaption, valueTypes);
                Chart.draw("#summary-container", [selectedSpec[2], selectedSpec[3]], textStrings.summaryCaption, textStrings.xAxisCaption, textStrings.yAxisCaption, textStrings.brinkCaprion, valueTypes);
            });

            specialities["pi"] = [{
                name: textStrings.paymentsAxis,
                data: [1300, 1300, 1300, 1300, 1300, 1500],
                color: "#990033"// was red
            },
            {
                name: textStrings.summaryAxis,
                data: [0, 0, 800, 3000, 5000, 7000],
                color: "#0099CC"// was green
            },
            {
                name: textStrings.summaryCosts,
                data: [1300, 2600, 3900, 5200, 6500, 8000],
                color: "#E3402D"
            },
            {
                name: textStrings.summarySalary,
                data: [0, 0, 9600, 36000, 60000, 84000],
                color: "#187A0F"
            }]



            specialities["ci"] = [{
                name: textStrings.paymentsAxis,
                data: [1300, 1300, 1300, 1300, 1300, 1500],
                color: "#990033"// was red
            },
            {
                name: textStrings.summaryAxis,
                data: [0, 0, 800, 3000, 5000, 7000],
                color: "#0099CC"// was green
            },
            {
                name: textStrings.summaryCosts,
                data: [1300, 2600, 3900, 5200, 6500, 8000],
                color: "#E3402D"
            },
            {
                name: textStrings.summarySalary,
                data: [0, 0, 9600, 36000, 60000, 84000],
                color: "#187A0F"
            }]


            specialities["ki"] = [{
                name: textStrings.paymentsAxis,
                data: [1200, 1200, 1200, 1200, 1200, 1400],
                color: "#990033"
            },
            {
                name: textStrings.summaryAxis,
                data: [0, 0, 1200, 1700, 2000, 2500],
                color: "#0099CC"
            },
            {
                name: textStrings.summarySalary,
                data: [0, 0, 9600, 36000, 60000, 84000],                
                color: "#E3402D"
            },
            {
                name: textStrings.summaryCosts,
                data: [0, 0, 1200, 2900, 4900, 7400],
                color: "#187A0F"
            }
            ]
        })
    </script>
}
